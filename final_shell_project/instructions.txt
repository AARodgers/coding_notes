Task:
Create a script called backup.sh which runs every day and automatically backs up any encrypted password files that have been updated in the past 24 hours.

There are a total of 20 points to be earned for 17 tasks in this final project.
Your grade will be based on the following tasks within the hands-on lab:

[Tasks 1-13]: Upload screenshot of sections from the backup.sh script displaying the correct code (13 pts: 1 pt for each of the 13 tasks)
[Task 14]: Submit your completed backup.sh file (1 pt)
[Task 15]: Upload screenshot showing executable permissions (2 pts)
[Task 16]: Upload screenshot showing file named backup-[TIMESTAMP].tar.gz (2 pts)
[Task 17]: Upload screenshot showing crontab schedule of once every day (2 pts)

Task 0:
Download the template file backup.sh by running the command below:data_
wget https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/pWN3kO2yWEuKMvYJdcLPQg/backup.sh






#!/bin/bash

# Task 1: Set variables from command line arguments
targetDirectory=$1
destinationDirectory=$2

# ---

# Task 2: Display the values of the two variables
echo "Target Directory: $targetDirectory"
echo "Destination Directory: $destinationDirectory"

# ---

# Task 3: Define currentTS as the current timestamp in seconds
currentTS=$(date +%s)

# ---

# Task 4: Define backupFileName
backupFileName="backup-$currentTS.tar.gz"

# ---

# Task 5: Define origAbsPath with the absolute path of the current directory
origAbsPath=$(pwd)

# ---

# Task 6: Define destAbsPath and validate the directory
cd "$destinationDirectory" || exit # Change to the destination directory, or exit if it fails
destAbsPath=$(pwd)             # Get its absolute path

# (Optional: Change back to the original directory for subsequent tasks)
# cd "$origAbsPath"

