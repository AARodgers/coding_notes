Allows you run automated task like scripts at certain times.
EX. Run a daily script at same time everyday

Cron is the service that runs the jobs

Crond ( is the daemon) interprets crontab files every minutes and submits the
script to Cron at the scheduled time.

Crontab is a file that contains jobs and scheduled data.
Is also a command that allows you edit a crontab file.

$ crontab -e   opens default text editor
Use editor to specify new schedule or command.

Syntax of schedule:
m h dom mon dow command
(minute, hour, day of month, month, and day of week)
(command can be any shell command, including a call to a shell script )

Need to be a number or *
Ex: 30 15 * * 0 date >> sundays.txt
(append the current date to the file ‘sundays.txt’ at 15:30 every Sunday )
? does 0 = Sunday?

Closing editor and saving changes, adds job to crontab (cron table).

Other examples of cron jobs:
m h dom mon dow command
(minute, hour, day of month, month, and day of week)
30 15 * *  0 date >> path/sunday.txt
(instructs cron to append the current date to the file ‘sundays.txt,’ at 15:30 every Sunday)
0 0 * * * /cron_scripts/load_data.sh
(specifies a “load data” shell script to run at midnight every day)
0 2 * * 0 /backup_data.sh
(results in cron running the “backup” data shell script to run at 2 AM on Sundays)

To see list of all cron jobs and schedules:
$ crontab -l | tail -6
(tail avoids seeing all of the comments from crontab file)

To remove a job:
Invoke crontab editor: crontab -e
Delete the line with the job you want to erase
Save changes and Exiting

Notes about cron jobs:

Cron is a system daemon used to execute desired tasks in the background at designated times.

A crontab file is a simple text file containing a list of commands meant to be run at specified times. It is edited using the crontab command.

Each line in a crontab file has five time-and-date fields, followed by a command, followed by a newline character (\n). The fields are separated by spaces.

The five time-and-date fields cannot contain spaces and their allowed values are as follows:

CRONTAB FILE SYNTAX:
Field	Allowed values
minute	0-59
hour	0-23, 0 = midnight
day	1-31
month	1-12
weekday	0-6, 0 = Sunday

Exercise: Create a cron job
1. Check for current jobs: crontab -l
2. Add a cron job: crontab -e ( will open default editor either nano or vim)
3. Edit file by putting in cron job(nano):
0 19 * * * echo "Welcome to cron" > /echo.txt
( specifies that the echo command should run when the minute is 0 and the hour is 19.
In other words, it means the job runs at 7.00 p.m every day)
(The output of the command should be sent to a file /echo.txt)
4. Save changes: Ctrl X ( for nano) and y to confirm and Enter to exit editor
